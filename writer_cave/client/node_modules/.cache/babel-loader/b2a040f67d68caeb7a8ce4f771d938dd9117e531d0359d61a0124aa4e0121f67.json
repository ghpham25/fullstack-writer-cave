{"ast":null,"code":"var _jsxFileName = \"/Users/giangpham/Desktop/writer-cave/writer_cave/client/src/pages/MyWriting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyWriting() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch saved data from your backend API\n    axios.get(\"/api/saved-prompt-answers\").then(response => {\n      setData(response.data); // Assuming the data is an array of objects\n    }).catch(error => {\n      console.error(\"Error fetching saved data: \", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AnswerCard, {\n      prompt: \"trial\",\n      answer: \"alo\",\n      children: \" \"\n    }, \"\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MyWriting, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MyWriting;\nvar _c;\n$RefreshReg$(_c, \"MyWriting\");","map":{"version":3,"names":["React","useState","useEffect","AnswerCard","jsxDEV","_jsxDEV","Fragment","_Fragment","MyWriting","_s","data","setData","axios","get","then","response","catch","error","console","children","prompt","answer","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giangpham/Desktop/writer-cave/writer_cave/client/src/pages/MyWriting.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AnswerCard from \"../components/AnswerCard\";\n\nexport default function MyWriting() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch saved data from your backend API\n    axios\n      .get(\"/api/saved-prompt-answers\")\n      .then((response) => {\n        setData(response.data); // Assuming the data is an array of objects\n      })\n      .catch((error) => {\n        console.error(\"Error fetching saved data: \", error);\n      });\n  }, []);\n\n  return (\n    <>\n      <AnswerCard key=\"\" prompt=\"trial\" answer=\"alo\">\n        {\" \"}\n      </AnswerCard>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CACFC,GAAG,CAAC,2BAA2B,CAAC,CAChCC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,OAAO,CAACI,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA,CAACF,UAAU;MAAQiB,MAAM,EAAC,OAAO;MAACC,MAAM,EAAC,KAAK;MAAAF,QAAA,EAC3C;IAAG,GADU,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN;EAAC,gBACb,CAAC;AAEP;AAAChB,EAAA,CArBuBD,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}