{"ast":null,"code":"var _jsxFileName = \"/Users/giangpham/Desktop/writer-cave/writer_cave/client/src/pages/MyWriting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyWriting() {\n  _s();\n  const [data, setData] = useState([]);\n  const handleDelete = dataId => {\n    // Make a DELETE request to your backend API\n    axios.delete(`http://localhost:5000/api/saved-prompt-answers/${dataId}`).then(() => {\n      // After successful deletion, update the prompts in the state\n      const updatedData = data.filter(data => data._id !== dataId);\n      setData(updatedData);\n    }).catch(error => {\n      console.error(\"Error deleting data: \", error);\n    });\n  };\n  useEffect(() => {\n    // Fetch saved data from your backend API\n    axios.get(\"http://localhost:5000/api/saved-prompt-answers\").then(response => {\n      setData(response.data.fetchedPromptAnswers.reverse()); // Assuming the data is an array of objects\n      // console.log(response.data.fetchedPromptAnswers);\n    }).catch(error => {\n      console.error(\"Error fetching saved data: \", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto grid grid-cols-5 gap-10 p-4 border border-gray-50 justify-center\",\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex w-full sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 p-2\",\n        children: /*#__PURE__*/_jsxDEV(AnswerCard, {\n          prompt: item.prompt,\n          answer: item.answer,\n          onDelete: () => handleDelete(item._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)\n      }, item._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MyWriting, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MyWriting;\nvar _c;\n$RefreshReg$(_c, \"MyWriting\");","map":{"version":3,"names":["React","useState","useEffect","AnswerCard","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MyWriting","_s","data","setData","handleDelete","dataId","delete","then","updatedData","filter","_id","catch","error","console","get","response","fetchedPromptAnswers","reverse","children","className","map","item","prompt","answer","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giangpham/Desktop/writer-cave/writer_cave/client/src/pages/MyWriting.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport axios from \"axios\";\n\nexport default function MyWriting() {\n  const [data, setData] = useState([]);\n\n  const handleDelete = (dataId) => {\n    // Make a DELETE request to your backend API\n    axios\n      .delete(`http://localhost:5000/api/saved-prompt-answers/${dataId}`)\n      .then(() => {\n        // After successful deletion, update the prompts in the state\n        const updatedData = data.filter(\n          (data) => data._id !== dataId\n        );\n        setData(updatedData);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting data: \", error);\n      });\n  };\n\n  useEffect(() => {\n    // Fetch saved data from your backend API\n    axios\n      .get(\"http://localhost:5000/api/saved-prompt-answers\")\n      .then((response) => {\n        setData(response.data.fetchedPromptAnswers.reverse()); // Assuming the data is an array of objects\n        // console.log(response.data.fetchedPromptAnswers);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching saved data: \", error);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"container mx-auto grid grid-cols-5 gap-10 p-4 border border-gray-50 justify-center\">\n  {data.map((item) => (\n    <div key={item._id} className=\"flex w-full sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 p-2\">\n      <AnswerCard\n        prompt={item.prompt}\n        answer={item.answer}\n        onDelete={() => handleDelete(item._id)}\n      />\n    </div>\n  ))}\n</div>\n\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,YAAY,GAAIC,MAAM,IAAK;IAC/B;IACAV,KAAK,CACFW,MAAM,CAAE,kDAAiDD,MAAO,EAAC,CAAC,CAClEE,IAAI,CAAC,MAAM;MACV;MACA,MAAMC,WAAW,GAAGN,IAAI,CAACO,MAAM,CAC5BP,IAAI,IAAKA,IAAI,CAACQ,GAAG,KAAKL,MACzB,CAAC;MACDF,OAAO,CAACK,WAAW,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFmB,GAAG,CAAC,gDAAgD,CAAC,CACrDP,IAAI,CAAEQ,QAAQ,IAAK;MAClBZ,OAAO,CAACY,QAAQ,CAACb,IAAI,CAACc,oBAAoB,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACvD;IACF,CAAC,CAAC,CACDN,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,SAAS,EAAC,oFAAoF;MAAAD,QAAA,EACtGhB,IAAI,CAACkB,GAAG,CAAEC,IAAI,iBACbxB,OAAA;QAAoBsB,SAAS,EAAC,qDAAqD;QAAAD,QAAA,eACjFrB,OAAA,CAACH,UAAU;UACT4B,MAAM,EAAED,IAAI,CAACC,MAAO;UACpBC,MAAM,EAAEF,IAAI,CAACE,MAAO;UACpBC,QAAQ,EAAEA,CAAA,KAAMpB,YAAY,CAACiB,IAAI,CAACX,GAAG;QAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC;MAAC,GALMP,IAAI,CAACX,GAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBAEA,CAAC;AAEP;AAAC3B,EAAA,CAhDuBD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}