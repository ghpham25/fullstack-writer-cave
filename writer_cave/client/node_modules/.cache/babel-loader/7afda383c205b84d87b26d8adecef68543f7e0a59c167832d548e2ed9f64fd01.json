{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport axios from 'axios';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyWriting() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch saved data from your backend API\n    axios.get(\"http://localhost:5000/api/saved-prompt-answers\").then(response => {\n      setData(response.data.fetchedPromptAnswers); // Assuming the data is an array of objects\n      console.log(response.data.fetchedPromptAnswers);\n    }).catch(error => {\n      console.error(\"Error fetching saved data: \", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(MyWriting, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = MyWriting;\nvar _c;\n$RefreshReg$(_c, \"MyWriting\");","map":{"version":3,"names":["React","useState","useEffect","AnswerCard","axios","Fragment","_Fragment","jsxDEV","_jsxDEV","MyWriting","_s","data","setData","get","then","response","fetchedPromptAnswers","console","log","catch","error","_c","$RefreshReg$"],"sources":["/Users/giangpham/Desktop/writer-cave/writer_cave/client/src/pages/MyWriting.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AnswerCard from \"../components/AnswerCard\";\nimport axios from 'axios';\n\nexport default function MyWriting() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch saved data from your backend API\n    axios\n      .get(\"http://localhost:5000/api/saved-prompt-answers\")\n      .then((response) => {\n        setData(response.data.fetchedPromptAnswers); // Assuming the data is an array of objects\n        console.log(response.data.fetchedPromptAnswers)\n      })\n      .catch((error) => {\n        console.error(\"Error fetching saved data: \", error);\n      });\n  }, []);\n\n  return (\n    <>\n    \n      {/* <AnswerCard key=\"\" prompt=\"trial\" answer=\"alo\">\n        {\" \"}\n      </AnswerCard> */}\n    </>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpCC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFS,GAAG,CAAC,gDAAgD,CAAC,CACrDC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAACK,oBAAoB,CAAC,CAAC,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACJ,IAAI,CAACK,oBAAoB,CAAC;IACjD,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAAAF,SAAA,mBAKE,CAAC;AAEP;AAACI,EAAA,CAvBuBD,SAAS;AAAAY,EAAA,GAATZ,SAAS;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}